@model IstanbulLMC.ViewModel.ChangePasswordVM

<div class="col-md-6">
    <div class="change-password-container">
        <h3 class="mb-3">Change Password</h3>
        @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label for="OldPassword">Old Password:</label>
                @Html.Password("OldPassword", null, new { @class = "form-control", id = "OldPassword" })
                <span id="oldPasswordError" asp-validation-for="OldPassword" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="NewPassword">New Password:</label>
                @Html.Password("NewPassword", null, new { @class = "form-control", id = "NewPassword" })
                <span id="newPasswordError" asp-validation-for="NewPassword" class="text-danger"></span>

            </div>

            <div class="form-group">
                <label for="ConfirmPassword">Confirm New Password:</label>
                @Html.Password("ConfirmPassword", null, new { @class = "form-control", id = "ConfirmPassword" })
                <span id="confirmPasswordError" asp-validation-for="ConfirmPassword" class="text-danger"></span>

            </div>

            <button type="submit" class="btn btn-primary">Change Password</button>
        }
    </div>
</div>


@section Scripts {
    @{

        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

}

<script>
    // Function to validate passwords
    function validatePasswords() {
        var oldPassword = $("#OldPassword").val();
        var newPassword = $("#NewPassword").val();
        var confirmPassword = $("#ConfirmPassword").val();
        var error = "";

        if (oldPassword === newPassword) {
            error = "New password should not be the same as the old password.";
        }
        // Update the error message for OldPassword
        $("#oldPasswordError").text("");

        // Update the error message for NewPassword
        $("#newPasswordError").text(error);


        // Return true if there are no errors, allowing form submission
        return error === "";
    }

    function validatePasswords1() {
        var newPassword = $("#NewPassword").val();
        var confirmPassword = $("#ConfirmPassword").val();
        var error = "";


        if (newPassword !== confirmPassword) {
            error = "New password and confirm password do not match.";
        }

        // Update the error message for ConfirmPassword
        $("#confirmPasswordError").text(error);

        // Return true if there are no errors, allowing form submission
        return error === "";
    }
    // Handle keyup event in the New Password and Confirm Password fields
    $("#NewPassword").keyup(function () {
        validatePasswords();
    });
    $("#ConfirmPassword").keyup(function () {
        validatePasswords1();
    });
</script>