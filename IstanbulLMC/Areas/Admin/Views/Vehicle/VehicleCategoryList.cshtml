@model List<VehicleCategoryDTO>

@{
    Layout = "_LayoutAdmin";

    List<string> toolbar = new List<string>
    {
        "ColumnChooser", "Search", "Add", "Edit", "Update", "Delete"
    }; 
}

<ejs-grid id="Grid" 
            toolbarClick="toolbarClick"
            actionComplete="onActionComplete"
            allowSorting="true"
            toolbar="@(new List<string>() { "ExcelExport", "Add", "Edit", "Cancel", "Update", "Delete" })"
                allowGrouping="true"
                allowPaging="true"
                allowFiltering="true"
                allowExcelExport="true" >

    <e-grid-pagesettings
            pageCount="5"
            pageSizes="true">
    </e-grid-pagesettings>

    <e-data-manager
        url="GetVehicleCategoryList"
        adaptor="UrlAdaptor"
        updateUrl="SaveVehicleCategory"
        insertUrl="SaveVehicleCategory"
        removeUrl=""
        >
    </e-data-manager>

    <e-grid-filterSettings type="Menu"></e-grid-filterSettings>
    <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Normal"></e-grid-editSettings>
    <e-grid-columns>
        <e-grid-column field="id" isPrimaryKey="true" allowEditing="false" visible="false" headerText="ID"></e-grid-column>
        <e-grid-column field="name" headerText="Name"></e-grid-column>
        <e-grid-column field="seateCount" headerText="SeateCount" format="n0"></e-grid-column>
        <e-grid-column field="suitcaseCount" headerText="Suitcase Count" format="n0"></e-grid-column>
        <e-grid-column field="maxDistance" headerText="Max Distance" format="n2"></e-grid-column>
        <e-grid-column field="kmPrice" headerText="KM Price" format="n2"></e-grid-column>
        <e-grid-column field="isActive" headerText="Active" editType="booleanedit" displayAsCheckBox="true" type="boolean"></e-grid-column>
    </e-grid-columns>
</ejs-grid>

@section Scripts {
    <script>
        function onActionComplete(args) {
            if (args.requestType === 'save') {
                var gridObj = document.getElementById("Grid").ej2_instances[0];
                gridObj.refresh();
            }
        }
        function toolbarClick(args) {
            var gridObj = document.getElementById(`Grid`).ej2_instances[0];

            if (args.item.id === 'Grid' + '_pdfexport') {
                //gridObj.pdfExport();
                var filteredRecords = gridObj.getFilteredRecords();

                if (filteredRecords.length == 0) {
                    filteredRecords = gridObj.dataSource;
                    console.log(filteredRecords);
                }
                else {
                    console.log(filteredRecords);
                }
                const myJSON = JSON.stringify(filteredRecords);

                var url = '/FastReport/SummaryReport?myJSON=' + myJSON;
                window.open(url, '_blank');
            }
            if (args.item.id === 'Grid' + '_excelexport') {
                gridObj.excelExport();
            }
            if (args.item.id === 'Grid' + '_csvexport') {
                gridObj.csvExport();
            }
        }
    </script>

    <ejs-scripts></ejs-scripts>
}